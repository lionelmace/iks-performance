apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: my-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-service
spec:
  replicas: 5
  selector:
    matchLabels:
      app: my-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: my-service
    spec:
      containers:
      - image: nginx:latest
        name: my-service
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
          - name: config-vol
            mountPath: /etc/nginx/
          - name: index
            mountPath: /usr/share/nginx/html/
      volumes:
        - name: config-vol
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: index
          configMap:
            name: nginx-config
            items:
              - key: index.html
                path: index.html
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: '
events {
}
http {
   keepalive_requests 100000;
   server {
       listen 80;
       index index.html;
       location / {
           root /usr/share/nginx/html/;
           index index.html;
       }

       location = /status {
             access_log off;
             default_type text/plain;
             add_header Content-Type text/plain;
             return 200 "alive";
        }
   }
}
'
  index.html: '
<html>
  <head>
    <title>World of Jenkins</title>
  </head>
  <body>
    <div align="center">
      <iframe src="https://giphy.com/embed/dZXzmKGKNiJtDxuwGg" width="480" height="360" frameBorder="0" class="giphy-embed" allowFullScreen></iframe><p><a href="https://giphy.com/gifs/originals-dZXzmKGKNiJtDxuwGg"></a></p>
      <h1>Welcome! Good to see you! :)</h1>
      <h2>There is plenty to explore here...</h2>
      <h2>You should be both patient and curious ... ;)</h2>
    </div>
  </body>
</html>
'
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-service
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: <host>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-service
            port:
              number: 80
